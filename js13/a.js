// 1. –°–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ.
// –í—Ö–æ–¥–Ω—ã–µ: average([1, 2, 3, 4]) ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: 2.5

// function average(arr){
//     const res = arr.reduce((sum,el)=>sum+=el,0)
//     const avg = res / arr.length
//     return avg
// }
// console.log(average([1, 2, 3, 4]))


// 2. –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–µ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.
// –í—Ö–æ–¥–Ω—ã–µ: reverseString('hello') ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: 'olleh'

// function  reverseString(str){
//     console.log(str.split('').reverse().join(''))
// }
// reverseString('hello')

// 3. –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–Ω–æ —á–∏—Å–ª–æ n –∏ —Å –ø–æ–º–æ—â—å—é —Ü–∏–∫–ª–∞ for –Ω–∞—Ö–æ–¥–∏—Ç —Ç–∞–∫–æ–µ —á–∏—Å–ª–æ x,
// —á—Ç–æ ùë•
// 2 = ùëõ. –ï—Å–ª–∏ —Ç–æ—á–Ω–æ–≥–æ —Ü–µ–ª–æ–≥–æ –∫–æ—Ä–Ω—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å -1.
// –í—Ö–æ–¥–Ω—ã–µ: findSquareRoot(16) ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: 4
// –í—Ö–æ–¥–Ω—ã–µ: findSquareRoot(25) ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: 5
// –í—Ö–æ–¥–Ω—ã–µ: findSquareRoot(10) ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: -1
// –í—Ö–æ–¥–Ω—ã–µ: findSquareRoot(1) ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: 1

// function findSquareRoot(n){
//     let x = 0
//     for (let i =0;i<n;i++){
//         if (i**2==n){
//             x= i;
//             break;
//         }
//         else x=-1;
//     }
//     return  x;
// }
// console.log(findSquareRoot(10))
// 4. –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É
// —Å–æ—Å–µ–¥–Ω–∏–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏.
// –í—Ö–æ–¥–Ω—ã–µ: maxDifference([1, 3, 6, 10]) ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: 4

// function maxDifference(arr){
//     let max = 0;
//     for (let i =1;i<arr.length;i++){
//         if (Math.abs(arr[i]-arr[i-1])>max)
//             max = Math.abs(arr[i]-arr[i-1])
//     }
//     return max
// }

// console.log(maxDifference([1, 3, 6, 10]));


// 5. –°–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–µ –±–µ–∑ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è —Å–∏–º–≤–æ–ª–æ–≤.
// –í—Ö–æ–¥–Ω—ã–µ: removeDuplicates('hello') ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: 'helo‚Äô

// function removeDuplicates(str){
//     let arr =''
//     for (let i = 0;i<str.length;i++){
//         if (!(arr.includes(str[i])))
//             arr+=str[i]
//     }
//     return arr
// }
// console.log(removeDuplicates('llllhello'))

// 6. –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∏–∑ –Ω–∏—Ö
// –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 3.
// –í—Ö–æ–¥–Ω—ã–µ: hasMultipleOfThree([1, 4, 6]) ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: true

// function hasMultipleOfThree(arr){
//     return arr.some((el)=>el%3==0)
// }
// console.log(hasMultipleOfThree([1, 4, 7]));

// 7. –°–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Ç–æ–ª—å–∫–æ —Ç–µ—Ö, –∫–æ—Ç–æ—Ä—ã–µ
// –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è –Ω–∞ –∑–∞–¥–∞–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª.
// –í—Ö–æ–¥–Ω—ã–µ: endsWith(['hello', 'world', 'js'], 'd') ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: ['world‚Äô]

// function endsWith(arr,symbol){
//     return arr.filter((el)=>el.endsWith(symbol))
// }
// console.log(endsWith(['hello', 'world', 'js'], 'd'))

// 8. –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —á–∏—Å–ª–∞ –∏–¥—É—Ç –≤
// –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è.
// –í—Ö–æ–¥–Ω—ã–µ: isAscending([1, 2, 3]) ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: true

// function isAscending(arr){
//     let flag = true
//     for ( let i =1;i<arr.length;i++){
//         if (arr[i]<arr[i-1]){
//             flag = false
//             break;
//         }
//     }
//     return flag
// }
// console.log(isAscending([1, 2, 1]));


// 9. –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ —Å–∏–º–≤–æ–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º
// –≤—Ö–æ–∂–¥–µ–Ω–∏–π —Å–∏–º–≤–æ–ª–∞ –∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏, –≥–¥–µ –æ–Ω –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è.
// –í—Ö–æ–¥–Ω—ã–µ: charStats('hello', 'l') ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: {count: 2, indices: [2, 3]}

// function charStats(str,symbol){
//     const obj = {
//         count : 0,
//         indexes : [],
//     }
//     for (let i =0;i<str.length;i++){
//         if (str[i]==symbol){
//             obj.count+=1;
//             obj.indexes.push(i)
//         }
//     }
//     console.log(obj.indexes)
//     return obj
// }
// console.log(charStats('hello', 'l'));



// 10. –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏, –≥–¥–µ —á–∏—Å–ª–∞
// —Ä–∞–∑–¥–µ–ª–µ–Ω—ã —Ç–∏—Ä–µ.
// –í—Ö–æ–¥–Ω—ã–µ: joinWithDash([1, 2, 3]) ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: '1-2-3‚Äô

// function joinWithDash(arr){
//     return arr.join('-')
// }
// console.log(joinWithDash([1, 2, 3]));

// 11. –°–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –æ–Ω–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö
// —Å–∏–º–≤–æ–ª–æ–≤.
// –í—Ö–æ–¥–Ω—ã–µ: hasUniqueChars('abc') ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: true

// function hasUniqueChars(str){
//     let s ='';
//     let flag = true;
//     for (let i =0;i<str.length;i++){
//         if (s.includes(str[i])){
//             flag = false;
//             break;
//         }
//         else s+=str[i]
//     }
//     return flag
// }
// console.log(hasUniqueChars('abcdefa'));

// 12. –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º
// –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏.
// –í—Ö–æ–¥–Ω—ã–µ: maxMinDifference([1, 2, 3, 4]) ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: 3

// function maxMinDifference(arr){
//     let min = arr[0]
//     let max = arr[0]
//     for (let i = 0;i<arr.length;i++){
//         if(arr[i]>max)
//             max = arr[i]
//         if (arr[i]<min)
//             min = arr[i]
//     }
//     const res = Math.abs(max-min)
//     return res
// }
// console.log(maxMinDifference([1, 2, 8, 4]));

// 13. –°–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –≤ —Å—Ç—Ä–æ–∫–µ –±–æ–ª—å—à–µ –≥–ª–∞—Å–Ω—ã—Ö, —á–µ–º
// —Å–æ–≥–ª–∞—Å–Ω—ã—Ö.
// –í—Ö–æ–¥–Ω—ã–µ: moreVowels('hello') ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: false

// function moreVowels(str) {
//     const ex = 'euioa'
//     let ow = 0;
//     let neow = 0;
//     for (let i =0;i<str.length;i++){
//         if (ex.includes(str[i]))
//             ow+=1
//         else neow+=1
//     }
//     return ow>neow
// }
// console.log(moreVowels('helloia'));


// 14. –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∞–º—É—é –¥–ª–∏–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É.
// –í—Ö–æ–¥–Ω—ã–µ: longestString(['a', 'abcd', 'abc']) ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: 'abcd‚Äô

// function longestString(arr){
//     let max = ''
//     for (let i = 0;i<arr.length;i++){
//         if (arr[i].length>max.length)
//             max = arr[i]
//     }
//     return max
// }
// console.log(longestString(['a', 'abcd', 'abc']));

// 15. –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.
// –í—Ö–æ–¥–Ω—ã–µ: uniqueObjectValues({a: 1, b: 2, c: 1}) ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: [1, 2]

// function uniqueObjectValues(obj){
//     const arr = []
//     for (let key in obj){
//         if (!(obj[key] in arr))
//             arr.push(obj[key])
//     }
//     return arr
// }
// console.log(uniqueObjectValues({a: 1, b: 2, c: 1}));

// 16. –°–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —Å—É–º–º–∞ —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª
// —Ä–∞–≤–Ω–∞ —Å—É–º–º–µ –Ω–µ—á–µ—Ç–Ω—ã—Ö.
// –í—Ö–æ–¥–Ω—ã–µ: isBalanced([2, 4, 1, 5]) ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: true

// function isBalanced(arr){
//     let sumeven = 0;
//     let sumodd = 0;
//     for(let i = 0;i<arr.length;i++){
//         if (arr[i]%2==0)
//             sumeven+=arr[i]
//         else sumodd+=arr[i]
//     }
//     return sumeven==sumodd
// }
// console.log(isBalanced([2, 4, 1, 5]));

// 17. –°–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å —Å–∞–º–æ–≥–æ –±–æ–ª—å—à–æ–≥–æ
// –∑–Ω–∞—á–µ–Ω–∏—è.
// –í—Ö–æ–¥–Ω—ã–µ: maxIndex([1, 3, 2]) ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: 1

// function maxIndex(arr){
//     let index = 0;
//     for (let i =0;i<arr.length;i++){
//         if (arr[i]>arr[index])
//             index = i
//     }
//     return index
// }
// console.log(maxIndex([1, 3, 2,22,23,14,48,15]));
