// 1. На входе пустой объект. Выполните следующие шаги:
// • Добавьте свойство id со значением 1.
// • Добавьте свойство name со значением "udemy".
// • Измените значение свойства name на "hschool".
// • Удалите свойство name из объекта.

// const obj = {};
// obj.id = 1;
// obj.name = 'udemy';
// obj.name = 'hschool';
// delete obj.name;
// console.log(obj)

// 2. На входе объект. Необходимо вывести все ключи, которые являются числами.
// Входные: {"1": "a", "2": "b", "name": "c"} → Результат: ["1", "2"]

// const obj = {"1": "a", "2": "b", "name": "c"};
// let arr = [];
// for (key in obj)
// {
//     if (!isNaN(key))
//         arr.push(key)
// }
// console.log(arr);

// 3. На входе объект. Необходимо вывести все значения, которые являются числами
// Входные: {"a": 1, "b": "2", "c": 3} → Результат: [1, 2, 3]

// const obj = {"a": 1, "b": "2", "c": 3};
// let arr = [];
// for (key in obj)
// {
//     if (!isNaN(obj[key]))
//         arr.push(Number(obj[key]))
// }
// console.log(arr);

// 4. На входе объект. Необходимо вывести все значения, которые являются четными числами.
// Входные: {"a": 1, "b": 2, "c": 4} → Результат: [2, 4]

// const obj = {"a": 1, "b": 2, "c": 4};
// let arr = [];
// for (key in obj)
// {
//     if (obj[key]%2==0)
//         arr.push(Number(obj[key]))
// }
// console.log(arr);

// 5. На входе объект. Необходимо сформировать массив из всех ключей, которые являются нечетными
// числами.
// Входные: {"1": "a", "3": "b", "4": "c"} → Результат: ["1", "3"]
// const obj = {"1": "a", "3": "b", "4": "c"};
// let arr = [];
// for (key in obj)
// {
//     if (key%2!=0)
//         arr.push(Number(key))
// }
// console.log(arr);

// 6. На входе объект. Необходимо удвоить все значения, которые являются числами.
// Входные: {"x": 5, "y": 10, "z": "abc"} → Результат: {"x": 10, "y": 20, "z": "abc"}

// const obj = {"x": 5, "y": 10, "z": "abc"};
// for (key in obj)
// {
//     if (!isNaN(obj[key]))
//         obj[key]= obj[key]*2
// }
// console.log(obj);

// 7. На входе объект. Необходимо проверить, пустой ли объект. Если объект пустой, вернуть false, если
// содержит хотя бы одну пару (ключ: значение), вернуть true.
// Входные: {} → Результат: false
// Входные: {"a": 1} → Результат: true

// const obj = {}; 
// let count = 0
// for(key in obj){
//     count++
// }
// if(count === 0) console.log(false)
// else console.log(true)

// 8. На входе объект. Необходимо посчитать количество пар (ключ: значение) в объекте.
// Входные: {"a": 1, "b": 2, "c": 3} → Результат: 3

// const obj =  {"a": 1, "b": 2, "c": 3};
// let count = 0;
// for (key in obj)
// {
//     count++
// }
// console.log(count)

// 9. На входе объект. Необходимо посчитать количество пар (ключ: значение), где значение является
// числом, и вывести это количество.
// Входные: {"x": "hello", "y": 20, "z": 30} → Результат: 2

// const obj =  {"a": 1, "b": 'ada', "c": 3};
// let count = 0;
// for (key in obj)
// {
//     if(!isNaN(obj[key]))
//         count++
// }
// console.log(count)

// 10. На входе объект с ключами name, age, birthday, значения которых – пустые строки. Необходимо
// считать данные с клавиатуры и заполнить объект соответствующими данными, добавив проверки
// на ввод.

// const obj = {
//     name : '',
//     age : '',
//     birthday: ''
// }

// const a = prompt('Введите имя')
// if(isNaN(a))
//     obj.name = a
// else
//     console.log('Неверное имя')
// const b = prompt('Введите возраст')
// if(!isNaN(b) && b > 0)
//     obj.age = b
// else
// {
//     console.log('Неверный возраст');
// }
// const c = prompt('Введите дату рождения')
// if(c != '')
//     obj.birthday = c
// else
// {
//     console.log('Введите дату рождения');
// }

// 11. На входе пустой объект. Необходимо ввести с клавиатуры два числа, затем добавить в объект ключ
// avg со значением среднего арифметического введенных чисел.

// const obj = {}
// const a = Number(prompt('Введите'))
// const b = Number(prompt('Введите'))
// obj.avg = (a + b)/2
// console.log(obj)

// 12. На входе пустой объект и количество элементов массива n. Введите с клавиатуры n чисел,
// сформируйте массив, а затем добавьте в объект ключ sum, значением которого будет сумма
// элементов массива. Добавьте проверки на ввод чисел.
// Входные: {} + Ввод: 3 (количество элементов) и 1, 2, 3 (элементы массива) → Результат: {"sum": 6}
// Входные: {} + Ввод: 4 (количество элементов) и 5, 10, 15, 20 (элементы массива) → Результат: {"sum": 50}

// const obj = {}
// const n = Number(prompt('Введите количество'))
// let arr = []
// for(let i = 0; i < n; i++){
//     let a = prompt('Введите число')
//     if(isNaN(a)){
//         console.log('Введите число')
//         break
//     }
//     else
//         arr.push(Number(a))
// }
// const result = arr.reduce(function(sum, elem){
//     return sum+=elem
// }, 0)
// obj.sum = result
// console.log(obj)

// 13. На входе массив чисел. Необходимо сформировать объект, где ключ – это элемент массива, а
// значение – true или false. Если число четное, то значение будет true, если нечетное – false.
// Входные: [1, 2, 3, 4, 5] → Результат: {1: false, 2: true, 3: false, 4: true, 5: false}
// Входные: [10, 15, 22, 33] → Результат: {10: true, 15: false, 22: true, 33: false}

// const a = [1, 2, 3, 4, 5];
// const obj = {}
// for(let i = 0; i < a.length; i++){
//     if(a[i] % 2 == 0)
//         obj[a[i]] = true
//     else
//         obj[a[i]] = false
// }
// console.log(obj)

// 14. *На входе массив чисел. Необходимо найти элемент, который повторяется наибольшее
// количество раз. Если таких элементов несколько, можно вернуть любой из них.
// Входные: [1, 2, 3, 1, 2, 1] → Результат: 1
// Входные: [5, 5, 6, 6, 6, 7] → Результат: 6

const a =[1, 2, 3,2,2,2,2,22, 1, 2, 1]
const a1 = []
const obj={}
for (let i=0;i<a.length;i++){
    if (!a1.includes(a[i])){
        a1.push(a[i])
    }
}
for (let i =0;i<a1.length;i++){
    let count =0
    for (let j=0;j<a.length;j++)
        if (a[j]==a1[i])
            count++
    obj[a1[i]]=count
}
let max = -100000
for (key in obj){
    if (obj[key]>max)
        max = obj[key]
}
for (key in obj){
    if (obj[key]==max)
        console.log(key)
}

